stages:
  - install_deps
  - lint
  - test
  - build
  - staging
  - production

variables:
  CI_IMAGE:                        "node:16.10"
  BUILDAH_IMAGE:                   "quay.io/buildah/stable:v1.27"
  APP_PORT:                        3000
  IMAGE_NAME:                      "docker.io/paritytech/github-issue-sync"
  DOCKER_TAG:                      "${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
  # Vault Section
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_ADDR:                      "${VAULT_SERVER_URL}"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"
  HELM_SECRETS_DRIVER:             vals

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - kubernetes-parity-build
  image:                           $CI_IMAGE

.test-refs:                        &test-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                 # PRs

.publish-refs:                     &publish-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

.common-refs:                      &common-refs
  rules:
    - !reference [.test-refs, rules]
    - !reference [.publish-refs, rules]

.production-refs:                  &production-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual

lint:
  <<:                              *common-refs
  stage:                           lint
  script:
    - yarn --immutable
    - yarn lint

build-docker-only:
  stage:                           build
  image:                           $BUILDAH_IMAGE
  <<:                              *test-refs
  script:
    - buildah bud
        --format=docker
        --build-arg VCS_REF="$CI_COMMIT_SHA"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="$DOCKER_TAG"
        --build-arg PORT="$APP_PORT"
        --tag "$IMAGE_NAME:$DOCKER_TAG"
        --file src/server/Dockerfile .

build-push-docker-image:
  stage:                           build
  <<:                              *publish-refs
  image:                           $BUILDAH_IMAGE
  script:
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
        ( echo "no docker credentials provided"; exit 1 )
    - echo "Log INFO values for the image that will be built"
    - echo
        buildah bud
        --format=docker
        --build-arg VCS_REF="$CI_COMMIT_SHA"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="$DOCKER_TAG"
        --build-arg PORT="$APP_PORT"
        --tag "$IMAGE_NAME:$DOCKER_TAG"
        --file src/server/Dockerfile .
    - buildah bud
        --format=docker
        --build-arg VCS_REF="$CI_COMMIT_SHA"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="$DOCKER_TAG"
        --build-arg PORT="$APP_PORT"
        --tag "$IMAGE_NAME:$DOCKER_TAG"
        --file src/server/Dockerfile .
    - echo "$Docker_Hub_Pass_Parity" |
        buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:$DOCKER_TAG"
  after_script:
    - buildah logout --all


# Deploy to Kubernetes
.deploy-k8s:                       &deploy-k8s
  image:                           "paritytech/kubetools:3.5.3"
  script:
    # Change the app version during build so that Kubernetes is able to update
    # the deployment even if the images' tags did not change
    # $CI_PIPELINE_ID is guaranteed to be unique
    - export KUBERNETES_VERSION_TAG="$CI_PIPELINE_ID"
    # Those values are embedded in the annotations and that's how the change is
    # noticed
    - |-
      sed -i "s/version:.*/version: $KUBERNETES_VERSION_TAG/" helm/Chart.yaml
    - |-
      sed -i "s/appVersion:.*/appVersion: $KUBERNETES_VERSION_TAG/" helm/Chart.yaml
    # https://docs.gitlab.com/ee/ci/examples/authenticating-with-hashicorp-vault/#example
    - export VAULT_TOKEN="$(vault write -field=token auth/$VAULT_AUTH_PATH/login role=$VAULT_AUTH_ROLE jwt=$CI_JOB_JWT)"
    - helm dependency update helm/
    - echo "Log INFO values that will be deployed"
    - echo
        helm secrets upgrade
        --install
        --atomic
        --timeout 300s
        --namespace github-issue-sync
        --values helm/values.yaml
        --values helm/values-${ENVIRONMENT}.yaml
        --set common.image.tag="$DOCKER_TAG"
        --set common.containerPort="$APP_PORT"
        --set common.livenessProbe.httpGet.port="$APP_PORT"
        --set common.readinessProbe.httpGet.port="$APP_PORT"
        github-issue-sync helm/
    - helm secrets upgrade
        --install
        --atomic
        --timeout 300s
        --namespace github-issue-sync
        --values helm/values.yaml
        --values helm/values-${ENVIRONMENT}.yaml
        --set common.image.tag="$DOCKER_TAG"
        --set common.containerPort="$APP_PORT"
        --set common.livenessProbe.httpGet.port="$APP_PORT"
        --set common.readinessProbe.httpGet.port="$APP_PORT"
        github-issue-sync helm/

deploy-staging:
  stage:                           staging
  <<:                              *publish-refs
  <<:                              *deploy-k8s
  variables:
    ENVIRONMENT:                   parity-stg
  tags:
    - github-issue-sync-stg

deploy-production:
  stage:                           production
  <<:                              *production-refs
  <<:                              *deploy-k8s
  variables:
    ENVIRONMENT:                   parity-prod
  tags:
    - github-issue-sync-prod
