common:
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  fullnameOverride: "github-issue-sync"

  replicaCount: 1

  image:
    repository: paritytech/github-issue-sync
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  env:
  # GREETING: "Warm greetings to"
    DB_USER: "github-issue-sync"
    DB_PASSWORD: ""
    DB_HOST: "cloudsql"
    DB_PORT: "5432"
    DB_NAME: "github-issue-sync"
    LOG_FORMAT: json

  envFrom: []
  #  - configMapRef:
  #      name: env-configmap
  #  - secretRef:
  #      name: github-issue-sync

  secrets: {}
  #  admin: <base64-encoded>

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000

  containerSecurityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # runAsGroup: 1000

  service:
    type: ClusterIP
    port: 80
    containerPort: 3000

  # ingress:
  #   enabled: true
  #   className: ""
  #   annotations: {}
  #     # kubernetes.io/ingress.class: nginx
  #     # kubernetes.io/tls-acme: "true"
  #   hosts:
  #     - host: chart-example.local
  #       paths:
  #         - path: /
  #           pathType: ImplementationSpecific
  #   tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  livenessProbe:
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 0
    timeoutSeconds: 1
    httpGet:
      path: /ping
      port: 3000
    periodSeconds: 10

  readinessProbe:
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 0
    timeoutSeconds: 1
    httpGet:
      path: /ping
      port: 3000
    periodSeconds: 10



  persistence:
    enabled: false
    accessModes:
    - ReadWriteOnce
    size: 50Gi
    annotations: {}
    # selector:
    #   matchLabels:
    #     app.kubernetes.io/name: github-issue-sync
    # subPath: ""
    # existingClaim:
    # storageClassName:

  cloudsql:
    enabled: true
    service:
      name: cloudsql
      port: 5432
      targetPort: 5432
  #   commandline:
  #     args: "-instances=gcp-project:zone:database-name=tcp:0.0.0.0:5432"
